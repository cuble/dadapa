Function:
As a product owner, I want to start a new backlog so that I can start a new project.
As a product owner, I want to save the backlog so that I can record my progress.
As a product owner, I want to open a saved backlog so that I can continue my work on a project.
As a product owner, I want to open a text sprint backlog so that I can trasfer my existing works into the tool.
As a product owner, I want to list all done and undone items seprately, so that I can know what has done and what need to be done obviously.
As a product owner, I want to add items to the backlog so that I can add new work to my project.
As a product owner, I want to delete undone items of the backlog so that I can remove not needed works.
As a product owner, I want to display the items in a prioritised order so that I can focus on high priority works easily.
As a product owner, I want to change the item priority so that I can adjust my work focus timely.
As a product owner, I want to change the item to done state so that I can mark a work completed.
As a product owner, I want the tool record my item done time automatically so that I can review my progress by period.
As a product owner, I want the tool record the timestamp when the item added to the backlog so that I can know how long a item has been living in the backlog.
As a product owner, I want to modify the undone items so that it can reflect my understanding to the requirement timely
As a product owner, I want to change the item from done to undone so that I can handle some exceptional cases such as I mark it done by mistake or some new works introduced to the old item.
As a user, I want to undo my changes so that I can recover my wrong operation quickly.
As a implementer, I want to attach outcome to the item so that I can trace our progress from the backlog-editor
As an implementer, I want to add sub-items to the item so that it can reflect our understanding to the task more structured.

Implementation study requirements:
Move caret 
    Move caret Home and end   ---Done
    Move caret to paticular position   ---Done
Set indention                 ---Done
Save/Load Text, which include utf-8 text     ---Done
Change text font
   define font             ----done
   set font to the texts   ----done
   make the line's style change when input
Add margin to hide/show lines
   study about folder margin
   study about margin click
Add result panel       ---done
Drag and drop 
Multi-page
Ctrl+Z/Ctrl+Y operation     ---done

Business reuqirement:
Send the evaluation version to some people
    First version: local version
    Second Version: network version
Establish a company 
Study phone version implementation requirement

----------------------------------------------------------------------------
To be studied items: 
1. RichTextCtrl          ---done
2. TreeMixin, TreeCtrl   ---done
3. Cairo_Snippets        ---done
4. AquaButton            ---done
5. AUI       ---give up
6. Clipboard and Dnd: 
    DragAndDrop, URLDragAndDrop      ---done
    CustomDragAndDrop                ---Done
7. KeyEvents            ---Done
8. Process              ---done
9. PythonEvents         ---Done
10. Threads             ---done
11. Timer               ---done
12. DelayedResult       ---Done
13. EventManager        ---done
14. CollapsiblePane     ---done
15. ContextHelp         ---done
16. MVCTree             ---Ignore
17. pyCrust, pyShell(wx.py)     ---Ignore
18. styledTextCtrl              ---Done
19. CustomTreeCtrl              ---Done
20. Menu                        ---Done
21. GenericMessageDialog        ----Done
22. HyperLinkCtrl               ----Done
23. Editor                      ----Done
24. PopupMenu, PopupControl, PopupWindow    ----Done
25. SearchCtrl                  ----done
26. StatusBar                   ----done
27. PyCollapsiblePane           ---done
28. Window Layout/SizedControls ---done
29. FlatMenu                    ---done
Basic: wx.Font, wx.***Sizer, wx.EVT_CONTEXT_MENU, win.Position, wx.ITEM_RADIO, wx.ITEM_CHECK, wx.ITEM_NORMAL, wx.Panel.PopupMenu
Drag Drop: cPickle, wx.DropSource, DropSource.SetData, DropSource.DoDragDrop, wx.pyDropTarget, pyDropTarget.SetDataObject, pyDropTarget.GetData, wx.CustomDataObject, evt.GetPosition, 
key event: wx.TheClipboard(Open, Close, SetData, Flush), wx.Event.Skip, wx.EVT_KEY_UP, wx.EVT_KEY_DOWN, wx.EVT_CHAR, evt.GetKeyCode, evt.ControlDown, evt.AltDown, evt.ShiftDown, evt.MetaDown, wx.Window.SetFocus, wx.Frame.SetExtraStyle(wx.WS_EX_BLOCK_EVENTS), wx.lib.evtmgr.eventManager.Register, wx.lib.newevent.NewEvent
Thread: thread.start_new_thread, wx.PostEvent, wx.lib.delayedresult.startWorker(...), wx.Process, wx.Execute, ex.Process.Redirect, EVT_END_PROCESS, wx.Process.GetInputSteam
Window: wx.Window.GetTextExtent, wx.BufferedPaintDC(wx.Window)
DC Draw: wx.PaintDC, wx.Window.GetClientRect, wx.Pen, wx.Brush, dc.SetPen, dc.SetBrush, dc.DrawRoundedRectangle, dc.DrawRectangleRect
statusBar: wx.Frame.CreateStatusBar, statusBar.SetStatusWidths, statusBar.SetStatusText
Menu: wx.lib.agw.flatmenu.FlatMenuBar, FM.FlatMenu, FM.FlatMenuItem, flatMenuBar.AddTool, flatMenuBar.AddControl, flatMenuBar.AddSeparator, flatMenuBar.AddRadioTool
styledTextCtrl: wx.stc.StyledTextCtrl,  EVT_STC_DO_DROP, EVT_STC_DRAG_OVER, EVT_STC_START_DRAG(evt.SetDragText, evt.SetDragAllowMove, evt.SetDrageResult), EVT_STC_MODIFIED, ed.EmptyUndoBuffer, ed.StyleSetSpec, ed.StartStyling, ed.setStyling, ed.SetMarginType, stc.STC_MARGIN_xxx, ed.SetMarginWidth, ed.MarkerDefine, ed.MarkerAdd, stc.STC_MARK_xxxx, ed.IndicatorSetStyle, ed.IndicatorSetForeground, stc.STC_INDIC_xxxx 
    Note: style the texts need some time, access the styling text is dangerous!!!
styledTextCtrl2: ed.CmdKeyAssign, ed.SetLexer, stc.STC_LEX_PYTHON, keyword.kwlist, ed.SetKeyWords, ed.SetProperty, ed.SetMargins, ed.SetViewWhiteSpace, ed.SetEdgeMode, ed.SetEdgeColumn, ed.SetMarginSensitive, stc.STC_MARKNUM_xxx, stc.EVT_STC_UPDATEUI, stc.EVT_STC_MARGINCLICK, ed.RegisterImage, ed.GetCharAt, ed.GetStyleAt, ed.BraceMatch, ed.BraceBadLight, ed.BraceHighlight, ed.GetLineCount, ed.GetFoldLevel, ed.HideLines, ed.ShowLines, ed.SetFoldExpanded,
wx Events: wx.EVT_WINDOW_DESTROY, wx.EVT_BUTTON,

others: wx.lib.colourselect, wx.WXK_xxxx, wx.StaticBitmap, wx.EmptyBitmap, wx.EVT_COMBOBOX.GetSelection, wx.FONTWEIGHT_BOLD, wx.StaticBoxSizer, wx.Dialog.ShowModal, wx.EVT_LEFT_DCLICK.GetPosition
